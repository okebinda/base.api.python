version: 2.1

orbs:
  aws-ecr: circleci/aws-ecr@6.15.2

jobs:
  build-and-test:

    docker:
      - image: circleci/python:3.9.1
        auth:
          username: mydockerhub-user
          password: $DOCKERHUB_PASSWORD
        environment:
          PIPENV_PIPFILE: /home/circleci/project/application/Pipfile

    steps:
      - checkout
      - run:
          name: Update directory ownership
          command: |
            sudo chown -R circleci:circleci /usr/local/bin
            sudo chown -R circleci:circleci /usr/local/lib/python3.9/site-packages
      - restore_cache:
          key: deps9-{{ .Branch }}-{{ checksum "application/Pipfile.lock" }}
      - run:
          name: Install dependencies
          command: |
            sudo pip install pipenv
            pipenv sync --dev
      - save_cache:
          key: deps9-{{ .Branch }}-{{ checksum "application/Pipfile.lock" }}
          paths:
            - ".venv"
            - "/usr/local/bin"
            - "/usr/local/lib/python3.9/site-packages"
      - run:
          name: Run linters
          command: |
            cd application
            pipenv run bandit -r src/main/python/
            pipenv run pyflakes src/main/python/
            pipenv run pycodestyle src/main/python/
            pipenv run pylint src/main/python/*
      - run:
          name: Run unit tests
          command: |
            cd application/src/main/python
            PIPENV_DOTENV_LOCATION=/home/circleci/project/application/config/.env.test pipenv run coverage run -m --source=. pytest -n auto -m unit ../../pytest/python

workflows:
  dev-build-test-and-push-image:
    when:
      equal: [ "dev", << pipeline.git.branch >> ]
    jobs:
      - build-and-test
      - aws-ecr/build-and-push-image:
          requires:
            - build-and-test
          repo: "${AWS_REPO}"
          tag: "dev-${CIRCLE_SHA1}"
          path: /home/circleci/project/application
